[tool.poetry]
name = "emma-policy"
version = "0.1.0"
description = ""
authors = ["Amit Parekh <amit.parekh@hw.ac.uk>"]
readme = "README.md"
repository = "https://github.com/emma-simbot/policy"

packages = [{ include = "emma_policy", from = "src" }]

[tool.poe]
envfile = ".env"

	[tool.poe.tasks]

		[tool.poe.tasks.format]
		help = "Format using the pre-commit hooks"
		cmd = "pre-commit run --all-files"

		[tool.poe.tasks.typecheck]
		help = "Check types with mypy"
		cmd = "mypy ."

		[tool.poe.tasks.lint]
		help = "Lint with flake8"
		cmd = "flake8 ."

		[tool.poe.tasks.test]
		help = "Run the fast Python tests"
		cmd = "pytest --cov=src -m 'not slow'"

		[tool.poe.tasks.test-everything]
		help = "Run all the tests and get the coverage"
		cmd = "pytest -v --junitxml=pytest.xml --cov=src -m 'not slow and not multiprocessing'"

		[tool.poe.tasks.update-torch-cuda]
		## See https://github.com/python-poetry/poetry/issues/2543
		help = "Update torch to use the latest CUDA version"
		shell = "python scripts/update_torch_cuda.py"

		[tool.poe.tasks.outdated]
		help = 'Show all outdated top-level dependencies'
		shell = """
			poetry show --outdated | grep --file=<(poetry show --tree | grep '^\\w' | sed 's/^\\([^ ]*\\).*/^\\1\\\\s/')
		"""
		interpreter = "bash"

[tool.poetry.dependencies]
python = "^3.9"
torch = "^1.11.0"
pytorch-lightning = "^1.5.10"
torchvision = "^0.12.0"
wandb = "^0.12.10"
torchmetrics = "^0.7.1"
hydra-core = "^1.1.1"
hydra-colorlog = "^1.1.0"
transformers = "^4.16.0"
pydantic = { extras = ["dotenv"], version = "^1.9.0" }
rich = "^12.0.0"
overrides = "^6.1.0"
numpy = "^1.22.2"
emma-datasets = { git = "https://github.com/emma-simbot/datasets", rev = "main" }
gradio = "^2.8.12"


[tool.poetry.dev-dependencies]
wemake-python-styleguide = "^0.16.0"
flake8 = "^4.0"
pytest = "^7.1.1"
ipykernel = "^6.9.0"
pre-commit = "^2.17.0"
poethepoet = "^0.13.1"
pytest-cov = "^3.0.0"
jupyterlab = "^3.2.9"
pudb = "^2022.1"
isort = "^5.10.1"
pytest-cases = "^3.6.9"
black = { version = "^22.1.0", extras = ["jupyter"] }
pytest-order = "^1.0.1"
mypy = "^0.941"
types-requests = "^2.27.12"
pytest-mock = "^3.7.0"
types-mock = "^4.0.11"
flake8-pytest-style = "^1.6.0"

[tool.black]
line-length = 99

[tool.isort]
profile = "black"
combine_as_imports = true
lines_after_imports = 2
line_length = 99
known_first_party = ["src, emma_policy"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
